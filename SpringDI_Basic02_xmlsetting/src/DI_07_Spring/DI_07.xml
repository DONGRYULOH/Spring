<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   http://www.springframework.org/schema/beans/spring-beans.xsd">
<!--  
Spring 자신만의 [컨테이너(Spring 전용 메모리 공간)] 제공 (IOC) 안에 
[객체를 만들고 조립(관계...의존성)] 설정

>>DIConfig.xml 문서를  read 해서 ....안에 있는 코드 먼저 실행
>>xml 파일 은 컨테이너를 구성하는 객체를 생성하고 의존을 설정하는 파일
또는  Annotation 통해서 컨테이너 자원 구성

:제어의 역전 (프로그램의 제어구조를 바꾼다)
:작은 단위의 부품을 만들어 놓고 그 것을 조립하는 행위 (레고 블럭 처럼)

	MessageBeanImpl messagebean = new MessageBeanImpl("hong"); //생성자 
	messagebean.setGreeting("hello"); //setter
	
	//main
	messagebean.sayHello()
	
	DI 문법)
	<bean id="한개의 이름(식별자)"  name="여러개의 이름>> 구분자(,) (공백) (;)"
	ex) <bean id=""  class=""  name="m1,m2 m3;m4"
	
	객체를 생성하고 필요한 객체를 주입 >> xml 파일
	주입방법 :
	생성자 주입   : (의무적)   : <constructor-arg>
	setter  주입 : (선택적) : <property name
	
	자바 코드) 
	
	ProtoclHandler handler = new ProtoclHandler();
		
	List<MyFilter> list = new ArrayList<MyFilter>();
	list.add(new EncFilter());
	list.add(new HeaderFilter());
	list.add(new ZipFilter());
	
	handler.setFilter(list); //List<MyFilter> 주소를 주입
	
	System.out.println(handler.filter_length());
	
	
	위자바 코드를 bean 객체 생성 , 조립 스프링을 이용해서 바꾸기)
	
	1단계 - 필요한 모든 bean 객체 생성 (new 자원 >> bean 객체로 생성) 
		   사용자가 직접 만들지 않는 클래스(JAVA API >> Collection 클래스)
		>> Spring 에서 Element 로 제공해줌 <list> , <map> , <set> 
			   

-->  
	
	<!-- 
	<bean id="encFilter" class="DI_07_Spring.EncFilter"></bean>
	<bean id="headerFilter" class="DI_07_Spring.HeaderFilter"></bean>
	<bean id="zipFilter" class="DI_07_Spring.ZipFilter"></bean>
	<bean id="protocolHandler" class="DI_07_Spring.ProtoclHandler">
		<property name="filters">
			<list>
				new ArrayList<MyFilter>();
				<ref bean="encFilter"/> [0] list.add(new EncFilter()); 
				<ref bean="headerFilter"/> [1] list.add(new headerFilter()); 
				<ref bean="zipFilter"/> [2] list.add(new zipFilter()); 
			</list>
		</property>
	</bean> 
	-->
	
	<bean id="protocolHandler" class="DI_07_Spring.ProtoclHandler">
		<property name="filters">
			<list> <!-- id="" 없이 class 만으로 생성  -->
				<bean class="DI_07_Spring.EncFilter"></bean>
				<bean class="DI_07_Spring.HeaderFilter"></bean>
				<bean class="DI_07_Spring.ZipFilter"></bean>
			</list>
		</property>
	</bean>
	
	
	
	  
</beans>




























